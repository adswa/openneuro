# docker compose versions
version: '2.3'

# shared volumes
volumes:
  project:

services:
  content:
    image: ${CONTENT_IMAGE}
    volumes:
      - /content

  # mongodb
  mongo:
    image: mongo:4.0
    volumes:
      - ${PERSISTENT_DIR}/mongo:/data/db
    restart: always

  # Redis
  redis:
    networks:
      default:
        aliases:
          - redis-0
    environment:
      - REDIS_REPLICATION_MODE=master
      - ALLOW_EMPTY_PASSWORD=yes
    image: bitnami/redis:5.0.5
    volumes:
      - ${PERSISTENT_DIR}/redis:/data
    restart: always  

  redis-replica:
    networks:
      default:
        aliases:
          - redis-replica-0
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-0
      - REDIS_MASTER_PORT_NUMBER=6379
      - ALLOW_EMPTY_PASSWORD=yes
    image: bitnami/redis:5.0.5
    depends_on:
      - redis
    volumes:
      - ${PERSISTENT_DIR}/redis:/data
    restart: always

  # crn node server
  server:
    image: openneuro/server:${CRN_SERVER_TAG}
    volumes:
      - ${PERSISTENT_DIR}/bids-core/persistent/data:/srv/bids-core/persistent/data
      - ${PERSISTENT_DIR}/crn-server/persistent:/srv/persistent
    env_file: ./config.env
    depends_on:
      - redis
      - mongo
      - datalad
    restart: always

  # datalad Python backend
  datalad:
    image: openneuro/datalad-service:${DATALAD_SERVICE_TAG}
    volumes:
      - ${PERSISTENT_DIR}/datalad:/datalad
      - ./datalad-key:/datalad-key
    env_file: ./config.env
    depends_on:
      - celery
    restart: always
    init: true

  # celery Python backend
  celery:
    image: openneuro/datalad-service:${DATALAD_SERVICE_TAG}
    command:
      - /dataset-worker
    scale: 4
    volumes:
      - ${PERSISTENT_DIR}/datalad:/datalad
      - ./datalad-key:/datalad-key
    restart: always
    env_file: ./config.env
    init: true

  # publish-only celery worker
  publish:
    image: openneuro/datalad-service:${DATALAD_SERVICE_TAG}
    command:
      - /publish-worker
    volumes:
      - ${PERSISTENT_DIR}/datalad:/datalad
      - ./datalad-key:/datalad-key
    restart: always
    env_file: ./config.env
    init: true

  flower:
    image: openneuro/datalad-service:${DATALAD_SERVICE_TAG}
    command:
      - flower
      - -A
      - datalad_service.worker
      - --broker
      - redis://redis
    env_file: ./config.env
    restart: always
    ports:
      - '5555:5555'

  # nginx + app
  web:
    image: openneuro/app:${CRN_APP_TAG}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
      - ./acme:/acme
      - ${SSL_DIR}:/etc/nginx/ssl
    volumes_from:
      - content
    ports:
      - '80:80'
      - '8110:8110'
      - '443:443'
    depends_on:
      - server
      - datalad
